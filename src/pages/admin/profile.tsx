import Head from "next/head";
import { signOut } from "next-auth/react";
import AdminLayout from "@/components/AdminLayout";
import { CiLogout } from "react-icons/ci";
import Image from "next/image";
import CustomSession from "@/@types/custom_session";
import { useContext } from "react";
import DataContext, { DataContextProps } from "@/context/DataContext";

export default function Profile({ data }: { data: CustomSession }) {
  function signOutHandler() {
    signOut({
      callbackUrl: "/",
    });
  }

  return (
    <>
      <Head>
        <title>Profile</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo-light.png" />
      </Head>
      <div className=" sm:w-full max-w-3xl w-[95%] sm:m-0 mx-auto relative z-10">
        <h1 className="font-poppins hidden sm:block text-3xl font-semibold text-center ">
          Profile
        </h1>
        {data ? User({ data, signOutHandler }) : <></>}
      </div>
    </>
  );
}

Profile.getLayout = function getLayout(page: React.ReactElement) {
  return <AdminLayout>{page}</AdminLayout>;
};

// Signed in
function User({
  data,
  signOutHandler,
}: {
  data: CustomSession;
  signOutHandler: () => void;
}) {
  const ctx = useContext(DataContext) as DataContextProps;
  let userImage = data?.user?.image;
  if (userImage) {
    userImage = userImage.split("=")[0];
  }

  return (
    <main>
      <div className="w-full p-5 sm:p-10 flex font-poppins flex-col bg-white shadow-md rounded-2xl gap-2 sm:mt-5 mt-20 relative">
        <h1 className="text-lg block sm:hidden font-bold mb-3">Profile</h1>
        <div
          className={`relative overflow-hidden w-36 h-36 rounded-full m-auto text-white ${
            ctx.image ? "bg-transparent" : "bg-slate-950"
          } flex justify-center items-center text-5xl font-semibold`}
        >
          {!ctx.image ? (
            data?.username![0].toUpperCase()
          ) : (
            <Image
              unoptimized
              fill
              src={ctx.image}
              alt=""
              className="object-cover"
            />
          )}
        </div>
        <div className="px-4 py-2 mt-2  bg-gray-100 rounded-lg">
          <p className="font-semibold">Nama</p>
          <p>{data?.user?.name}</p>
        </div>
        <div className="px-4 py-2 bg-gray-100 rounded-lg">
          <p className="font-semibold">Email</p>
          <p>{data?.user?.email}</p>
        </div>
        <div className="px-4 py-2  bg-gray-100 rounded-lg">
          <p className="font-semibold">Username</p>
          <p>{data?.username}</p>
        </div>
        <button
          className="py-3 px-4 mt-3 bg-gray-100 hover:bg-slate-950 hover:text-white transition w-fit rounded-lg text-semibold flex gap-1"
          onClick={signOutHandler}
        >
          <CiLogout className="text-xl" />
          Sign Out
        </button>
      </div>
    </main>
  );
}

export { default as getServerSideProps } from "@/utils/checkUname";
